{"ast":null,"code":"var _jsxFileName = \"D:\\\\ZTPAI\\\\frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../css/style.css';\nimport logo from '../img/logo-with-slogan.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [name, setName] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [messages, setMessages] = useState([]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Sprawdzanie, czy hasła się zgadzają\n    if (password !== confirmPassword) {\n      setMessages([\"Hasła się nie zgadzają.\"]);\n      return;\n    }\n    try {\n      // Wysyłanie żądania POST do serwera z odpowiednimi danymi\n      const response = await axios.post('http://localhost:8000/register/', {\n        first_name: name,\n        last_name: lastname,\n        email: email,\n        password: password,\n        password_confirmation: confirmPassword\n      });\n\n      // Obsługa odpowiedzi od serwera\n      if (response.data.status === 'success') {\n        // Przekierowanie do strony logowania lub dashboardu\n        window.location.href = '/login';\n      } else {\n        // Wyświetlanie wiadomości zwrotnej od serwera\n        setMessages([response.data.message]);\n      }\n    } catch (error) {\n      // Obsługa błędów, np. problemów z połączeniem\n      setMessages([\"Błąd podczas rejestracji. Spróbuj ponownie.\"]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"logo\",\n      src: logo,\n      alt: \"Logo z has\\u0142em\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Imi\\u0119\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nazwisko\",\n        value: lastname,\n        onChange: e => setLastname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\" // Ustawienie typu na email dla walidacji po stronie klienta\n        ,\n        placeholder: \"E-mail\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Has\\u0142o\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Potwierd\\u017A has\\u0142o\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Zarejestruj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"+dncs54Cu9ki18IbF0iCkAEOXh4=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","logo","jsxDEV","_jsxDEV","Register","_s","name","setName","lastname","setLastname","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","messages","setMessages","handleSubmit","event","preventDefault","response","post","first_name","last_name","password_confirmation","data","status","window","location","href","message","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","index","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/ZTPAI/frontend/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../css/style.css';\r\nimport logo from '../img/logo-with-slogan.svg';\r\n\r\nfunction Register() {\r\n    const [name, setName] = useState('');\r\n    const [lastname, setLastname] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // Sprawdzanie, czy hasła się zgadzają\r\n        if(password !== confirmPassword) {\r\n            setMessages([\"Hasła się nie zgadzają.\"]);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Wysyłanie żądania POST do serwera z odpowiednimi danymi\r\n            const response = await axios.post('http://localhost:8000/register/', {\r\n                first_name: name,\r\n                last_name: lastname,\r\n                email: email,\r\n                password: password,\r\n                password_confirmation: confirmPassword,\r\n            });\r\n\r\n            // Obsługa odpowiedzi od serwera\r\n            if (response.data.status === 'success') {\r\n                // Przekierowanie do strony logowania lub dashboardu\r\n                window.location.href = '/login';\r\n            } else {\r\n                // Wyświetlanie wiadomości zwrotnej od serwera\r\n                setMessages([response.data.message]);\r\n            }\r\n        } catch (error) {\r\n            // Obsługa błędów, np. problemów z połączeniem\r\n            setMessages([\"Błąd podczas rejestracji. Spróbuj ponownie.\"]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <img className=\"logo\" src={logo} alt=\"Logo z hasłem\" />\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"messages\">\r\n                    {messages.map((message, index) => (\r\n                        <div key={index}>{message}</div>\r\n                    ))}\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Imię\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Nazwisko\"\r\n                    value={lastname}\r\n                    onChange={(e) => setLastname(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"email\" // Ustawienie typu na email dla walidacji po stronie klienta\r\n                    placeholder=\"E-mail\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Hasło\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Potwierdź hasło\"\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Zarejestruj</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}